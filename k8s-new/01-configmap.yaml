apiVersion: v1
kind: ConfigMap
metadata:
  name: auction-config
  namespace: auction
  labels:
    app: auction-microservices
data:
  # Node Environment
  NODE_ENV: "production"
  
  # Image Tag
  IMAGE_TAG: "latest"
  
  # Service Ports
  API_GATEWAY_PORT: "3001"
  AUTH_PORT: "3101"
  BID_PORT: "3102"
  LISTINGS_PORT: "3103"
  PAYMENTS_PORT: "3104"
  PROFILE_PORT: "3105"
  EMAIL_PORT: "3106"
  EXPIRATION_PORT: "3107"
  SAGA_ORCHESTRATOR_PORT: "3108"
  FRONTEND_PORT: "3000"
  
  # Database Configuration
  MYSQL_DATABASE: "auth"
  BID_MYSQL_DATABASE: "bid"
  LISTINGS_MYSQL_DATABASE: "listings"
  PAYMENTS_MYSQL_DATABASE: "payments"
  PROFILE_MYSQL_DATABASE: "profile"
  
  # NATS Configuration
  NATS_URL: "nats://nats-streaming:4222"
  NATS_CLUSTER_ID: "auction"
  NATS_CLIENT_ID_AUTH: "auth-service"
  NATS_CLIENT_ID_BID: "bid-service"
  NATS_CLIENT_ID_LISTINGS: "listings-service"
  NATS_CLIENT_ID_PAYMENTS: "payments-service"
  NATS_CLIENT_ID_PROFILE: "profile-service"
  NATS_CLIENT_ID_EMAIL: "email-service"
  NATS_CLIENT_ID_SAGA: "saga-orchestrator-service"
  NATS_CLIENT_ID_EXPIRATION: "expiration-service"
  
  # Redis Configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_URL: "redis://redis:6379"
  
  # Internal Service URLs
  AUTH_SERVICE_URL: "http://auth:3101"
  BID_SERVICE_URL: "http://bid:3102"
  LISTINGS_SERVICE_URL: "http://listings:3103"
  PAYMENTS_SERVICE_URL: "http://payments:3104"
  PROFILE_SERVICE_URL: "http://profile:3105"
  EMAIL_SERVICE_URL: "http://email:3106"
  SAGA_ORCHESTRATOR_URL: "http://saga-orchestrator:3108"
  
  # MySQL URIs (will use secrets for passwords)
  AUTH_MYSQL_URI: "mysql://root:MYSQL_PASSWORD_PLACEHOLDER@auth-mysql:3306/auth"
  BID_MYSQL_URI: "mysql://root:MYSQL_PASSWORD_PLACEHOLDER@bid-mysql:3306/bid"
  LISTINGS_MYSQL_URI: "mysql://root:MYSQL_PASSWORD_PLACEHOLDER@listings-mysql:3306/listings"
  PAYMENTS_MYSQL_URI: "mysql://root:MYSQL_PASSWORD_PLACEHOLDER@payments-mysql:3306/payments"
  PROFILE_MYSQL_URI: "mysql://root:MYSQL_PASSWORD_PLACEHOLDER@profile-mysql:3306/profile"
  
  # Jaeger/OpenTelemetry Configuration
  JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
  JAEGER_AGENT_HOST: "jaeger"
  JAEGER_AGENT_PORT: "6832"
  OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
  OTEL_TRACES_EXPORTER: "jaeger"
  OTEL_RESOURCE_ATTRIBUTES: "service.namespace=auction,service.version=1.0.0,deployment.environment=production"
  OTEL_TRACES_SAMPLER: "always_on"
  OTEL_TRACES_SAMPLER_ARG: "1.0"
  OTEL_PROPAGATORS: "tracecontext,baggage"
  OTEL_INSTRUMENTATION_COMMON_DEFAULT_ENABLED: "true"
  
  # AWS Configuration
  AWS_REGION: "us-east-1"
  
  # Frontend Configuration
  WATCHPACK_POLLING: "false"
  NEXT_PUBLIC_API_GATEWAY_PORT: "3001"
  
  # External URLs - Update these for your environment
  SERVER_IP: "your.server.ip.here"
  FRONTEND_URL: "http://your.server.ip.here:3000"
  NEXT_PUBLIC_API_URL: "http://your.server.ip.here:3001"
  SERVER_API_URL: "http://your.server.ip.here:3001"
  NEXT_PUBLIC_SERVER_IP: "your.server.ip.here"
  NEXT_PUBLIC_LISTINGS_SOCKET_URL: "http://your.server.ip.here:3103/socket"
  CORS_ORIGIN: "http://your.server.ip.here:3000,http://your.server.ip.here:3001,http://your.server.ip.here"
---
