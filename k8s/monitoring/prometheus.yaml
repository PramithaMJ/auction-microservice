# Prometheus configuration for VPA monitoring without Prometheus Operator
# Fixed version that works with standalone Prometheus deployment

---
# Prometheus ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: auction-infrastructure
---
# Prometheus ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups: ["networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling.k8s.io"]
  resources:
  - verticalpodautoscalers
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources:
  - nodes
  - pods
  verbs: ["get", "list"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
# Prometheus ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: auction-infrastructure
---
# Prometheus ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: auction-infrastructure
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "vpa_rules.yml"
    
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
    
    scrape_configs:
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
    
    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
    
    - job_name: 'kubernetes-cadvisor'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        
    - job_name: 'kube-state-metrics'
      kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
          - auction-infrastructure
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        action: keep
        regex: kube-state-metrics
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: http-metrics
      
    - job_name: 'vpa-recommender'
      kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
          - kube-system
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        action: keep
        regex: vpa-recommender
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: metrics
        
    - job_name: 'node-exporter'
      kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
          - auction-infrastructure
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_label_app]
        action: keep
        regex: node-exporter
      - source_labels: [__meta_kubernetes_service_port_name]
        action: keep
        regex: metrics

  vpa_rules.yml: |
    groups:
    - name: vpa_recommendations
      rules:
      - alert: VPAHighCPURecommendation
        expr: kube_verticalpodautoscaler_status_recommendation{resource="cpu", unit="core", namespace="auction-system"} > 1
        for: 5m
        labels:
          severity: warning
          service: "{{ $labels.target_name }}"
        annotations:
          summary: "High CPU recommendation for {{ $labels.target_name }}"
          description: "VPA recommends {{ $value }} CPU cores for {{ $labels.target_name }} in namespace {{ $labels.namespace }}"
          runbook_url: "https://kubernetes.io/docs/tasks/run-application/vertical-pod-autoscale/"
      
      - alert: VPAHighMemoryRecommendation
        expr: kube_verticalpodautoscaler_status_recommendation{resource="memory", unit="byte", namespace="auction-system"} / 1024 / 1024 / 1024 > 2
        for: 5m
        labels:
          severity: warning
          service: "{{ $labels.target_name }}"
        annotations:
          summary: "High memory recommendation for {{ $labels.target_name }}"
          description: "VPA recommends {{ $value }} GB memory for {{ $labels.target_name }} in namespace {{ $labels.namespace }}"
          runbook_url: "https://kubernetes.io/docs/tasks/run-application/vertical-pod-autoscale/"
          
      - alert: VPAUnderProvisionedCPU
        expr: (kube_verticalpodautoscaler_status_recommendation{resource="cpu", unit="core", namespace="auction-system"} / on(target_name) group_left() kube_pod_container_resource_requests{resource="cpu", unit="core", namespace="auction-system"}) > 1.5
        for: 10m
        labels:
          severity: critical
          service: "{{ $labels.target_name }}"
        annotations:
          summary: "Pod {{ $labels.target_name }} severely under-provisioned for CPU"
          description: "VPA CPU recommendation is significantly higher than current allocation for {{ $labels.target_name }}"
          runbook_url: "https://kubernetes.io/docs/tasks/run-application/vertical-pod-autoscale/"

      - alert: VPAUnderProvisionedMemory
        expr: (kube_verticalpodautoscaler_status_recommendation{resource="memory", unit="byte", namespace="auction-system"} / on(target_name) group_left() kube_pod_container_resource_requests{resource="memory", unit="byte", namespace="auction-system"}) > 1.5
        for: 10m
        labels:
          severity: critical
          service: "{{ $labels.target_name }}"
        annotations:
          summary: "Pod {{ $labels.target_name }} severely under-provisioned for Memory"
          description: "VPA Memory recommendation is significantly higher than current allocation for {{ $labels.target_name }}"
          runbook_url: "https://kubernetes.io/docs/tasks/run-application/vertical-pod-autoscale/"

      - alert: VPAOverProvisionedCPU
        expr: (kube_verticalpodautoscaler_status_recommendation{resource="cpu", unit="core", namespace="auction-system"} / on(target_name) group_left() kube_pod_container_resource_requests{resource="cpu", unit="core", namespace="auction-system"}) < 0.5
        for: 15m
        labels:
          severity: info
          service: "{{ $labels.target_name }}"
        annotations:
          summary: "Pod {{ $labels.target_name }} over-provisioned for CPU"
          description: "VPA CPU recommendation is significantly lower than current allocation for {{ $labels.target_name }}"
          runbook_url: "https://kubernetes.io/docs/tasks/run-application/vertical-pod-autoscale/"

      - alert: VPAOverProvisionedMemory
        expr: (kube_verticalpodautoscaler_status_recommendation{resource="memory", unit="byte", namespace="auction-system"} / on(target_name) group_left() kube_pod_container_resource_requests{resource="memory", unit="byte", namespace="auction-system"}) < 0.5
        for: 15m
        labels:
          severity: info
          service: "{{ $labels.target_name }}"
        annotations:
          summary: "Pod {{ $labels.target_name }} over-provisioned for Memory"
          description: "VPA Memory recommendation is significantly lower than current allocation for {{ $labels.target_name }}"
          runbook_url: "https://kubernetes.io/docs/tasks/run-application/vertical-pod-autoscale/"
---
# Prometheus PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: auction-infrastructure
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp2
---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: auction-infrastructure
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.40.0
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus/'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=15d'
        - '--web.enable-lifecycle'
        - '--web.enable-admin-api'
        ports:
        - containerPort: 9090
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/
        - name: prometheus-storage-volume
          mountPath: /prometheus/
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: prometheus-config-volume
        configMap:
          defaultMode: 420
          name: prometheus-config
      - name: prometheus-storage-volume
        persistentVolumeClaim:
          claimName: prometheus-storage
---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: auction-infrastructure
  labels:
    app: prometheus
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
