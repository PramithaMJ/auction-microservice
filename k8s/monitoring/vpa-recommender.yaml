# VPA Recommender with metrics exposure for monitoring
# This ensures VPA metrics are available for Prometheus scraping

---
# VPA Recommender ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-recommender
  namespace: kube-system
---
# VPA Recommender ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-recommender
rules:
  - apiGroups: ['']
    resources: ['pods', 'nodes', 'limitranges']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['']
    resources: ['events']
    verbs: ['get', 'list', 'watch', 'create']
  - apiGroups: ['autoscaling.k8s.io']
    resources: ['verticalpodautoscalers']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['apps']
    resources: ['replicasets']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['metrics.k8s.io']
    resources: ['pods']
    verbs: ['get', 'list']
---
# VPA Recommender ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-recommender
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-recommender
subjects:
  - kind: ServiceAccount
    name: vpa-recommender
    namespace: kube-system
---
# VPA Recommender Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-recommender
  namespace: kube-system
  labels:
    app: vpa-recommender
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpa-recommender
  template:
    metadata:
      labels:
        app: vpa-recommender
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8942'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: vpa-recommender
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      containers:
        - name: recommender
          image: k8s.gcr.io/autoscaling/vpa-recommender:0.13.0
          args:
            - --v=4
            - --stderrthreshold=info
            - --pod-recommendation-min-cpu-millicores=25
            - --pod-recommendation-min-memory-mb=250
            - --metric-for-pod-initialization=cpu
            - --checkpoints-gc-interval=10m0s
            - --memory-saver=true
            - --recommender-interval=1m
            - --address=0.0.0.0
            - --prometheus-address=
            - --storage=prometheus
            - --prometheus-cadvisor-job-name=kubernetes-cadvisor
            - --prometheus-metrics-job-name=kubernetes-pods
            - --metric-client-config=/etc/config/metrics-client-config.yaml
            - --use-external-metrics=false
          ports:
            - name: metrics
              containerPort: 8942
              protocol: TCP
            - name: webhook
              containerPort: 8944
              protocol: TCP
          resources:
            requests:
              cpu: 50m
              memory: 500Mi
            limits:
              cpu: 200m
              memory: 1000Mi
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /health-check
              port: metrics
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /health-check
              port: metrics
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          volumeMounts:
            - name: metrics-client-config
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: metrics-client-config
          configMap:
            name: vpa-metrics-config
---
# VPA Metrics Client ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: vpa-metrics-config
  namespace: kube-system
data:
  metrics-client-config.yaml: |
    prometheus:
      address: http://prometheus.auction-infrastructure.svc.cluster.local:9090
    cadvisorMetricsJobName: kubernetes-cadvisor
    namespaceMetricsJobName: kubernetes-pods
    podMetricsJobName: kubernetes-pods
    nodeMetricsJobName: kubernetes-nodes
    containerCpuUsageMetric: container_cpu_usage_seconds_total
    containerMemoryUsageMetric: container_memory_working_set_bytes
    containerMemoryPeakUsageMetric: container_spec_memory_limit_bytes
    containerMemoryRequestMetric: kube_pod_container_resource_requests
    containerCpuRequestMetric: kube_pod_container_resource_requests
    nodeMemoryCapacityMetric: kube_node_status_capacity
    nodeCpuCapacityMetric: kube_node_status_capacity
    podReadyMetric: kube_pod_status_ready
    containerStartTimeMetric: kube_pod_container_status_restarts_total
---
# VPA Recommender Service
apiVersion: v1
kind: Service
metadata:
  name: vpa-recommender
  namespace: kube-system
  labels:
    app: vpa-recommender
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8942'
    prometheus.io/path: '/metrics'
spec:
  selector:
    app: vpa-recommender
  ports:
    - name: metrics
      port: 8942
      targetPort: 8942
      protocol: TCP
    - name: webhook
      port: 8944
      targetPort: 8944
      protocol: TCP
