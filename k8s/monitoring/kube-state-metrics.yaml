---
# Kube State Metrics ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: auction-system

---
# Kube State Metrics ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics
rules:
  - apiGroups: ['']
    resources:
      - configmaps
      - secrets
      - nodes
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
    verbs: ['list', 'watch']
  - apiGroups: ['apps']
    resources:
      - statefulsets
      - daemonsets
      - deployments
      - replicasets
    verbs: ['list', 'watch']
  - apiGroups: ['batch']
    resources:
      - cronjobs
      - jobs
    verbs: ['list', 'watch']
  - apiGroups: ['autoscaling']
    resources:
      - horizontalpodautoscalers
    verbs: ['list', 'watch']
  - apiGroups: ['autoscaling.k8s.io']
    resources:
      - verticalpodautoscalers
    verbs: ['list', 'watch']
  - apiGroups: ['extensions']
    resources:
      - ingresses
    verbs: ['list', 'watch']
  - apiGroups: ['networking.k8s.io']
    resources:
      - ingresses
    verbs: ['list', 'watch']

---
# Kube State Metrics ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: auction-system

---
# Kube State Metrics Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: auction-system
  labels:
    app: kube-state-metrics
spec:
  selector:
    matchLabels:
      app: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-state-metrics
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
    spec:
      serviceAccountName: kube-state-metrics
      containers:
        - name: kube-state-metrics
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.9.2
          ports:
            - name: http-metrics
              containerPort: 8080
            - name: telemetry
              containerPort: 8081
          resources:
            limits:
              memory: 256Mi
              cpu: 200m
            requests:
              memory: 128Mi
              cpu: 100m
          args:
            - --port=8080
            - --telemetry-port=8081
            - --resources=verticalpodautoscalers,deployments,pods,services

---
# Kube State Metrics Service
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics-service
  namespace: auction-system
  labels:
    app: kube-state-metrics
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8080'
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 8080
      targetPort: http-metrics
    - name: telemetry
      port: 8081
      targetPort: telemetry
  selector:
    app: kube-state-metrics
