# Multi-stage build for better dependency management
FROM node:18-alpine AS common-builder

WORKDIR /app

# Copy common package
COPY ./common ./common

# Build common package
WORKDIR /app/common
RUN npm install && npm run build

# Main application stage
FROM node:18-alpine

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    bash \
    libc-dev \
    && ln -sf python3 /usr/bin/python

# Copy the entire common package first
COPY --from=common-builder /app/common ./common

# Copy frontend package files
COPY ./services/frontend/package*.json ./

# Install frontend dependencies
RUN npm install --production=false

# Copy application source
COPY ./services/frontend/src ./src
COPY ./services/frontend/public ./public
COPY ./services/frontend/next.config.js ./
COPY ./services/frontend/.babelrc ./
COPY ./services/frontend/tsconfig.json ./
COPY ./services/frontend/tailwind.config.js ./
COPY ./services/frontend/postcss.config.js ./

# Expose port
EXPOSE 3000

# Start development server
CMD ["npm", "run", "dev"]